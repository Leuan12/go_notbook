{"./":{"url":"./","title":"加油努力 !!","keywords":"","body":"GO 语言学习资料交流社区中文社区英文社区知识图谱网址导航资料汇总中文资料英文资料视频资料GO 语言学习资料 学习 goland 参考: 无闻 交流社区 中文社区 Golang 中国：国内较早的 Go 社区，汇聚各类信息与服务 Study Golang：国内 Go 社区先驱，同样汇聚各类信息与服务 Revel 交流论坛：Revel 框架的中文社区 GoCN Forum：Go 语言爱好者中文交流论坛 QQ 群： Go Web 交流群：259316004 Golang 中国：211938256 Go 内部实现与标准库：192706294 Go 编程语言：102319854 Martini&Macaron 交流群：371440803 Golang 新手群：369793160 英文社区 Go Forum：Go 语言爱好者英文交流论坛 golang-nuts 邮件列表：Go 语言官方指定邮件列表讨论区 Go+ 社区：Go 语言官方指定 G+ 社区 知识图谱 Go Knowledge Graph：Go 知识图谱 网址导航 官方： Go 中国站点: Go 语言中国官方站点(无需翻墙) Playground：Go 语言代码在线运行 国内镜像： Go 指南国内镜像 Go 语言国内下载镜像 Go 官方网站国内镜像 Web 框架： Macaron：模块化 Web 框架 Beego：重量级 Web 框架 Revel：较早成熟的重量级 Web 框架 Martini: 一个强大为了编写模块化 Web 应用而生的 Go 语言框架 Echo: 功能模块齐全, 上手容易, 文档示例齐全 Gin：轻量级 HTTP Web 框架 ORM 以及数据库驱动： xorm：支持 MySQL、PostgreSQL、SQLite3 以及 MsSQL mgo：MongoDB 官方推荐驱动 gorm: 全功能 ORM (无限接近) 支持 MySQL、PostgreSQL、SQLite3 以及 MsSQL 辅助站点： Go Walker：Go 语言在线 API 文档 gobuild.io：Go 语言在线二进制编译与下载 Rego：Go 语言正则在线测试 gopm.io：科学下载第三方包 Json To Go struct:Convert JSON to Go struct在线工具 开发工具： Emacs24：配置脚本 / (中文社区) LiteIDE Sublime Text 2/3：配置教程 GoLand Atom：配置插件（感觉还不错，类似 Sublime，配置比较简单） VIM：配置插件（嫌 vim 配置麻烦的童鞋可以直接用这个） 学习站点： Go by Example Go database/sql tutorial 支持 Go 的云平台： Koding Nitrous.IO Get up and running with Go on Google Cloud Platform AWS SDK for Go - Developer Preview:=>github azure sdk for go github How to Use CoreOS on Azure Create Azure Web app with GoLang extension Qiniu Qiniu SDK for Go:=>github 其它站点： Golang 杂志：订阅说明 Reddit Newspaper.IO：Golang 新闻订阅 Go Newsletter：Golang 新闻订阅 资料汇总 中文资料 书籍： 《深入解析Go》 《Go实战开发》 《Go入门指南》 《Go语言标准库》 《Go Web 编程》 《Go语言博客实践》 《Go语言学习笔记》 翻译： Effective Go 英文版 The Way to Go 中文版 《Learning Go》英文版:=>《Learning Go》 中文版 教程： 《Go编程基础》 《Go Web基础》 《Go名库讲解》 Go 命令教程 英文资料 文档： Go Code Review Comments：Go 语言代码风格指导 Go Code Convention：无闻的 Go 语言编码规范 GopherCon 2014 GopherCon 2015 GopherCon 2016 GopherCon 2017 书籍： Network programming with Go：中文版 Practical Cryptography With Go An Introduction to Programming in Go Go Bootcamp Mastering Concurrency in Go(July 2014)Nathan Kozyra Go Programming Blueprints(January 23,2015) The Go Programming Language(Published Oct 30, 2015,Not Yet Published) 视频资料 基础： Go Slices and Bytes - Shakeel Mahate：优酷视频 - Youtube COSCUP 2013: Golang & ORM - 林佑安：优酷视频 - Youtube GopherCon： 2014：Youtube 2015：Youtube 2016：Youtube 2017：Youtube Golang UK Conference： 2015：Youtube GopherCon India 2015: Youtube Copyright © king 2017 all right reserved，powered by Gitbook该文件修订时间： 2019-03-05 21:25:48 "},"1.go环境配置/s1.html":{"url":"1.go环境配置/s1.html","title":"Go 环境配置","keywords":"","body":"Go 环境配置Welcome to the world of Go, let's explore it!Go 环境配置 Welcome to the world of Go, let's explore it! Go 是一种新的语言, 一种并发的, 带垃圾回收的 .快速编译的语言. 快速编译的语言, 他具有以下特点: 他可以在一台计算机用几秒钟的事件编译一个大型的go程序 Go为软件构造提供了一种模型，它使依赖分析更加容易，且避免了大部分C风格include文件与库的开头。 Go是静态类型的语言，它的类型系统没有层级。因此用户不需要在定义类型之间的关系上花费时间，这样感觉起来比典型的面向对象语言更轻量级。 Go完全是垃圾回收型的语言，并为并发执行与通信提供了基本的支持。 按照其设计，Go打算为多核机器上系统软件的构造提供一种方法。 Go是一种编译型语言，它结合了解释型语言的游刃有余，动态类型语言的开发效率，以及静态类型的安全性。它也打算成为现代的，支持网络与多核计算的语言。要满足这些目标，需要解决一些语言上的问题：一个富有表达能力但轻量级的类型系统，并发与垃圾回收机制，严格的依赖规范等等。这些无法通过库或工具解决好，因此Go也就应运而生了。 Copyright © king 2017 all right reserved，powered by Gitbook该文件修订时间： 2019-03-05 20:57:13 "},"1.go环境配置/s2.html":{"url":"1.go环境配置/s2.html","title":"go安装","keywords":"","body":"go安装linux / unix /maxos 安装linux installMac OS 安装Windows 安装go安装 安装有多种方式 linux / unix /maxos 安装 linux install 此方式为使用以编译二进制压缩包安装64位 go 安装步骤: 下载go 安装好 // 按照系统保本和go 版本更改链接 $ wget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz 解压到 /usr /local $ sudo tar -C /usr/local -xzf go1.8.3.linux-amd64.tar.gz 修改 PATH 环境变量 $ vim ~/.profile # 或者 ~/.bashrc // 添加: export PATH=$PATH:/usr/local/go/bin (可选) 设置 GOPATH // go1.8及后续版本在没有设置GOPATH时，会默认以$HOME/go为GOPATH // GOPATH为你的工作目录，其可以为任意合法目录 $ vim ~/.profile # 或者 ~/.bashrc // 添加: export GOPATH=$HOME/go 然后进行检测, 执行go 上图是 linux 系统下安装成功后执行 go 显示的信息 如果出现 go 的 usage 信息. 那么 go 已经安装成功了 如果痴线该命令不存在, 那么可以检查一下自己的path 环境变量中 是否存在go 的安装目录 Mac OS 安装 建议使用 HomeBrew 安装 // 安装go brew install go // 更新go brew upgrade go 安装过程大同小异, 会自动安装 go 的最新稳定版本, 因为我已经安装好了没有截图, 所以剽窃了一张别人, 好让大家有个参考 出现上面的结果就表示安装成功了，我们在终端输入*go version*查看我们的安装版本，我的显示go version go1.10.2 darwin/amd64，表示我安装的是v1.10.2版本。 配置 gopath 查看 go 的环境变量设置的命令 go env 结果 GOARCH=\"amd64\" GOBIN=\"\" GOCACHE=\"\" GOEXE=\"\" GOHOSTARCH=\"amd64\" GOHOSTOS=\"darwin\" GOOS=\"darwin\" GOPATH=\"\" GORACE=\"\" GOROOT=\"/usr/local/Cellar/go/1.10.2/libexec\" GOTMPDIR=\"\" GOTOOLDIR=\"/usr/local/Cellar/go/1.10.2/libexec/pkg/tool/darwin_amd64\" GCCGO=\"gccgo\" CC=\"clang\" CXX=\"clang++\" CGO_ENABLED=\"1\" CGO_CFLAGS=\"-g -O2\" CGO_CPPFLAGS=\"\" CGO_CXXFLAGS=\"-g -O2\" CGO_FFLAGS=\"-g -O2\" CGO_LDFLAGS=\"-g -O2\" PKG_CONFIG=\"pkg-config\" GOGCCFLAGS=\"-fPIC -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length=0 -fdebug-prefix-map=/var/folders/cf/lgqwwx4x1xs3rgp5rn0vz41h0000gn/T/go-build392342221=/tmp/go-build -gno-record-gcc-switches -fno-common\" 命令行 cd ~ vim .bash_profile //新增 xport GOROOT=/usr/local/opt/go/libexec export GOPATH=$HOME/.go export PATH=$PATH:$GOROOT/bin:$GOPATH/bin 测试: vim hello.go // hello.go package main import \"fmt\" func main() { fmt.Printf(\"Hello, world!\") } Windows 安装 按照系统对应下面下载地址下载： 32位系统下载 go1.8.3.windows-386.msi 64位系统下载 go1.8.3.windows-amd64.msi 双击打开下载的文件，一路按照默认点击下一步即可。 Copyright © king 2017 all right reserved，powered by Gitbook该文件修订时间： 2019-03-05 21:33:22 "},"1.go环境配置/s3.html":{"url":"1.go环境配置/s3.html","title":"go path 与工作空间","keywords":"","body":"go path 与工作空间go path 与工作空间 Copyright © king 2017 all right reserved，powered by Gitbook该文件修订时间： 2019-03-05 20:47:36 "},"2.go语言基础.html":{"url":"2.go语言基础.html","title":"Go语言基础","keywords":"","body":"Go语言基础Go语言基础 Copyright © king 2017 all right reserved，powered by Gitbook该文件修订时间： 2019-03-05 20:47:36 "}}